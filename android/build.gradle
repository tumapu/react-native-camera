def safeExtGet(prop, fallback) {
    rootProject.ext.has(prop) ? rootProject.ext.get(prop) : fallback
}

buildscript {
  repositories {
    google()
    maven {
      url 'https://maven.google.com'
    }
    jcenter()
  }

  dependencies {
    classpath 'com.android.tools.build:gradle:3.2.1'
  }
}

apply plugin: 'com.android.library'

android {
  compileSdkVersion safeExtGet('compileSdkVersion', 28)
  buildToolsVersion safeExtGet('buildToolsVersion', '28.0.3')

  defaultConfig {
    minSdkVersion safeExtGet('minSdkVersion', 16)
    targetSdkVersion safeExtGet('targetSdkVersion', 26)
  }
  lintOptions {
    abortOnError false
    warning 'InvalidPackage'
  }
}

repositories {
  google()
  mavenCentral()
  maven {
   url 'https://maven.google.com'
  }
  maven { url "https://jitpack.io" }
  maven {
    // All of React Native (JS, Obj-C sources, Android binaries) is installed from npm
    url "$rootDir/../node_modules/react-native/android"
  }
}

dependencies {
  compileOnly 'com.facebook.react:react-native:+'
  compileOnly 'com.facebook.infer.annotation:infer-annotation:+'
  implementation "com.google.zxing:core:3.3.0"
  implementation "com.drewnoakes:metadata-extractor:2.9.1"
  implementation "com.google.android.gms:play-services-vision:16.0.0"
//  implementation "com.android.support:exifinterface:${safeExtGet('supportLibVersion', '27.1.0')}"
//  implementation "com.android.support:support-annotations:${safeExtGet('supportLibVersion', '27.1.0')}"
//  implementation "com.android.support:support-v4:${safeExtGet('supportLibVersion', '27.1.0')}"
  implementation "androidx.legacy:legacy-support-v4:1.0.0"
  implementation "androidx.exifinterface:exifinterface:1.0.0"
}
